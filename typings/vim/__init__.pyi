from typing import Any

def command(cmd: str) -> None: ...
def eval(expr: str) -> Any: ...
def bindeval(expr: str) -> Any: ...
#def vars() -> dict[str, Any]: ...
vars: dict[str, Any]

class Buffer:
    def __getitem__(self, name: Any) -> Any: ...
    def __setitem__(self, name: Any, value: Any)-> None:...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __len__(self) -> int: ...

    @property
    def valid(self) -> bool: ...


    @property
    def number(self) -> int: ...

    @property
    def name(self) -> str: ...

    def append(self, line: str): ...




class Window:
    def __getattr__(self, name: str) -> Any: ...
    def __setitem__(self, name: Any, value: Any)-> None:...
    def __call__(self, *args, **kwargs) -> Any: ...

class Current:
    buffer: Buffer
    window: Window
    tabpage: Any
    line: str

current: Current

options: Any
buffers: list[Buffer]
windows: list[Window]
